class Solution:
    def generateParenthesis(self, n: int) -> List[str]:
        
        def build_string(result_list, curr, op_p, cl_p, max_p):
          if len(curr) == (max_p*2):
            result_list.append(curr)
            
          if op_p < max_p:
            build_string(result_list, curr+'(', op_p+1, cl_p, max_p)
            
          if cl_p < op_p:
            build_string(result_list, curr+')', op_p, cl_p+1, max_p)
            
        result = []
        build_string(result, "", 0, 0, n)
        return resultx
        
